"use strict";
/*!
 * reading-time
 * Copyright (c) Nicolas Gryman <ngryman@gmail.com>
 * MIT Licensed
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var reading_time_1 = require("./reading-time");
var stream_1 = require("stream");
var ReadingTimeStream = /** @class */ (function (_super) {
    __extends(ReadingTimeStream, _super);
    function ReadingTimeStream(options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, { objectMode: true }) || this;
        _this.options = options;
        _this.stats = { total: 0 };
        return _this;
    }
    ReadingTimeStream.prototype._transform = function (chunk, encoding, callback) {
        var stats = (0, reading_time_1.countWords)(chunk.toString(encoding), this.options);
        this.stats.total += stats.total;
        callback();
    };
    ReadingTimeStream.prototype._flush = function (callback) {
        this.push(this.stats);
        callback();
    };
    return ReadingTimeStream;
}(stream_1.Transform));
exports["default"] = ReadingTimeStream;
